import prisma from "@/database/prisma.client";
import { app } from "./server";

async function setupEnv() {
  console.log("ðŸš€ Checando as vÃ¡riaveis do sistema...");

  const notDefined = [];
  const need = ["SERVER_PORT", "APP_SECRET", "DATABASE_URL"];

  need.forEach((name) => {
    if (!process.env[name]) notDefined.push(name);
  });

  if (notDefined.length > 0) {
    console.log(
      `ðŸ›‘ A aplicaÃ§Ã£o nÃ£o pode ser executada sem ter as vÃ¡riaveis ${need.join(
        ", "
      )}...`
    );
    process.exit(1);
  }

  console.log("âœ… Todas as vÃ¡riaveis necessÃ¡rias estÃ£o definidas...");
}

async function setupDatabase() {
  console.log("ðŸš€ Testando conexÃ£o com banco de dados...");

  try {
    await prisma.$connect();
    await prisma.$disconnect();
    console.log("âœ… O banco de dados estÃ¡ ativo e funcional...");
  } catch (error) {
    console.log("ðŸ›‘ NÃ£o foi possÃ­vel se conectar com banco de dados...");
    await prisma.$disconnect();
    console.log(error);
  }
}

async function setupExpress() {
  console.log("ðŸš€ Iniciando o servidor express...");

  const port = Number(process.env.SERVER_PORT);

  app.listen(port, () => {
    console.log(`ðŸ”¥ Servidor rodando na porta ${port}...`);
  });
}

console.log("ðŸš€ Iniciando a aplicaÃ§Ã£o...");
setupEnv().then(() => setupDatabase().then(() => setupExpress()));
